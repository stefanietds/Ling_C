#include<stdio.h>
#include<locale.h>
#include<windows.h>
#define PI 3,141

void intersec(){
	int c,i,j,a[5],b[5],inter[5];
      printf(" ___________________________________");
	printf("\n|                                   |");
	printf("\n|            INTERSECÇAÕ            |");
    printf("\n|___________________________________|");
    printf("\n");
	for(i=0;i<=4;i++){
		printf("Entre com o %d elemento Vetor A: ",i+1);
		scanf("%d",&a[i]);
	}
	printf("-------------------------------------------\n");
	for(i=0;i<=4;i++){
		printf("Entre com o %d elemento Vetor B: ",i+1);
		scanf("%d",&b[i]);
	}c=0;
	for(i=0;i<=4;i++){
      for(j=0;j<=4;j++){
		   if(a[i]==b[j]){
				inter[c]=a[i];
				c=c+1;
    		}
    	}
    } printf("\n Os elemento da Intersecção {");
	for(i=0;i<c;i++){
			printf(" %d ",inter[i]);
		} printf("}");
}
void dife(){
	int cd,chave,i,j,a[5],b[5],d[5];
    printf(" _____________________________________");
    printf("\n|                                   |");
	printf("\n|            DIFERENÇA              |");
    printf("\n|___________________________________|");
    printf("\n");
	for(i=0;i<=4;i++){
		printf("Entre com o %do elemento Vetor A: ",i+1);
		scanf("%d",&a[i]);
	}
	printf("-------------------------------------------\n");
	for(i=0;i<=4;i++){
		printf("Entre com o %do elemento Vetor B: ",i+1);
		scanf("%d",&b[i]);
	}cd=0;
	for(i=0;i<=4;i++){
		chave=0;
		for(j=0;j<=4;j++)
			if(a[i]==b[j]){
				chave=1;
				j=6;
			}	if(chave==0){
				d[cd]=a[i];
				cd=cd+1;
			}
	}	if(cd==0)
	printf("\nA diferença A-B é vazia");
	else
	printf("\n A diferença do Vetor A do Vetor B {");
		for(i=0;i<cd;i++){
		printf(" %d ",d[i]);	
	    }
		printf("}");
}
int SomaMa(){
	int i, j, linhaA, coluA, linhaB, coluB;
	printf(" ___________________________________");
	printf("\n|                                   |");
	printf("\n|      SOMA DE MATRIZES             |");
    printf("\n|___________________________________|");
    printf("\n");
    printf("Digite a quantidade de linhas da Matriz A:");
	scanf("%d",&linhaA);
	printf("Digite a quandade de colunas da Matriz A: ");
	scanf("%d", &coluA);
	printf("-------------------------------------------\n");
	printf("Digite a quantidade de linhas da Matriz B:");
	scanf("%d",&linhaB);
	printf("Digite a quantidade de colunas da Matriz B:");
	scanf("%d",&coluB);
	float A[linhaA][coluA];
	float B[linhaB][coluB];
	float C[linhaA][coluB];
		if (coluA != coluB || linhaA != linhaB){
		printf("-------------------------------------------\n");
		printf("A soma não pode ser realizada!!\n");
		printf("A quantidade de linhas e colunas das duas matrizes devem ser iguais");
		return 0;
		}
		for(i=0;i<linhaA;i++){
			for(j=0;j<coluA;j++){
				printf("Digite os valores da Matriz A[%d][%d]=", i,j);
				scanf("%f",&A[i][j]);
		   }
		}

	    printf("-------------------------------------------\n");
		for(i=0;i<linhaB;i++){
			for(j=0;j<coluB;j++){
				printf("Digite os valores da Matriz B[%d][%d]=", i, j);
				scanf("%f",&B[i][j]);
	    }
	    } 
	    printf("-------------------------------------------\n");
		printf("\nValores da Matriz A!\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluA;j++){
	   		if(j!=(coluA-1)){
	   			printf(" \t %.2f \t", A[i][j]);
		
	   	}	else{
	   			printf(" \t %.2f \n", A[i][j]);
			}
		}
	}
	printf("-------------------------------------------\n");
	printf("\nValores da Matriz B!\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluA;j++){
	   		if(j!=(coluA-1)){
	   			printf("\t %.2f \t", B[i][j]);
			   
	   		}
			   else{
	   			printf(" \t %.2f \n", B[i][j]);
	}
}
}
	    printf("-------------------------------------------\n");
	printf(" A soma das matrizes é a matriz C! \n  ");
	for (i=0;i<linhaA;i++){
		for (j=0;j<coluA;j++){
			C[i][j]= A[i][j] + B[i][j];
			printf("  \t %f", C[i][j]);
		}
		printf("\n \n");
	} 
}
int SubMa(){
	int i, j, linhaA, coluA, linhaB, coluB;
	  printf(" ___________________________________");
	printf("\n|                                   |");
	printf("\n|   SUBTRAÇÃO DE MATRIZES           |");
    printf("\n|___________________________________|");
    printf("\n");
	 printf("Digite a quantidade de linhas da Matriz A:");
	scanf("%d",&linhaA);
	printf("Digite a quandade de colunas da Matriz A:");
	scanf("%d", &coluA);
	printf("-------------------------------------------\n");
	printf("Digite a quantidade de linhas da Matriz B:");
	scanf("%d",&linhaB);
	printf("Digite a quantidade de colunas da Matriz B:");
	scanf("%d",&coluB);
	float A[linhaA][coluA];
	float B[linhaB][coluB];
	float F[linhaA][coluB];
	if (coluA != coluB || linhaA != linhaB){
	    printf("-------------------------------------------\n");
		printf("A subtração não pode ser realizada!!\n");
		printf("A quantidade de linhas e colunas das duas matrizes devem ser iguais");
		return 0;
		}
		for(i=0;i<linhaA;i++){
			for(j=0;j<coluA;j++){
				printf("Digite os valores da Matriz A[%d][%d]=", i,j);
				scanf("%f",&A[i][j]);
		   }
		} 
		printf("-------------------------------------------\n");
		for(i=0;i<linhaB;i++){
			for(j=0;j<coluB;j++){
				printf("Digite os valores da Matriz B[%d][%d]=", i, j);
				scanf("%f",&B[i][j]);
	    }
	    } 
	    printf("-------------------------------------------\n");
		printf("\nValores da Matriz A!\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluA;j++){
	   		if(j!=(coluA-1)){
	   			printf(" \t %.2f \t", A[i][j]);
			   
	   		}else{
	   			printf(" \t %.2f \n", A[i][j]);
	}
}
}  
       printf("-------------------------------------------\n");    
       printf("\nValores da Matriz B!\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluA;j++){
	   		if(j!=(coluA-1)){
	   			printf("\t %.2f \t", B[i][j]);
			   
	   		}else{
	   			printf("\t %.2f \n", B[i][j]);
	}
}
} 
	    printf("-------------------------------------------\n");
	printf(" A subtração das matrizes é a matriz F! \n ");
	for (i=0;i<linhaA;i++){
		for (j=0;j<coluA;j++){
			F[i][j]= A[i][j] - B[i][j];
			printf("  \t %f", F[i][j]);
		}
		printf("\n \n");
	} 
} 
int multi(){
	int i,j;
	int k1,k2;
	int linhaA, coluA,linhaB,coluB;
	printf(" ___________________________________");
	printf("\n|                                   |");
	printf("\n|   MULTIPLICAÇÃO DE MATRIZES       |");
    printf("\n|___________________________________|");
    printf("\n");
    printf("Digite a quantidade de linhas da Matriz A :");
	scanf("%d",&linhaA);
	printf("Digite a quandade de colunas da Matriz A  :");
	scanf("%d", &coluA);
	printf("-------------------------------------------\n");
	printf("Digite a quantidade de linhas da Matriz B :");
	scanf("%d",&linhaB);
	printf("Digite a quantidade de colunas da Matriz B :");
	scanf("%d",&coluB);
	float A[linhaA][coluA];
	float B[linhaB][coluB];
	float C[linhaA][coluB];
	float temp;
	
	if (coluA!=linhaB){
		printf("A Multiplicação nao pode ser realizada!!\n");
		printf("A quantidade das colunas A é diferente das linhas B.\n");
		return 0;
		}for(i=0;i<linhaA;i++){
			for(j=0;j<coluA;j++){
				printf("Digite os valores da Matriz[%d][%d]=", i+1,j+1);
				scanf("%f",&A[i][j]);
		   }
		} 
		printf("-------------------------------------------\n");
		for(i=0;i<linhaB;i++){
			for(j=0;j<coluB;j++){
				printf("Digite os valores da Matriz B[%d][%d]=", i+1,j+1);
				scanf("%f",&B[i][j]);
	       }
	
	   } 
	   printf("-------------------------------------------\n");
	   printf("\nValores da Matriz A!\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluA;j++){
	   		if(j!=(coluA-1))
	   			printf("%.2f \t", A[i][j]);
			   
	   		else
	   			printf("%.2f \n", A[i][j]);
			
		   }
	   } 
	   printf("-------------------------------------------\n");
	   printf("\nValores da Matriz B!\n \n");
	   for (i=0;i<linhaB;i++){
	   	for(j=0;j<coluB;j++){
	   		if(j!=(coluB-1))
	   			printf("%f \t", B[i][j]);
			   
	   		else
	   			printf("%f \n", B[i][j]);
			   
		   }
	   } for (k1=0;k1<linhaA;k1++){
	   	for(k2=0;k2<coluB;k2++){
	   		temp=0.0;
	   		for(i=0;i<coluA;i++){
	   			temp=temp+A[k1][i]*B[i][k2];
			   }
	   		C[k1][k2]=temp;
		   }
	   } 
	   printf("-------------------------------------------\n");
	   printf("O resultada multiplicação das matrizes A e B é :\n \n");
	   for (i=0;i<linhaA;i++){
	   	for(j=0;j<coluB;j++){
	   		if (j!=(coluB-1))
	   			printf("%f \t", C[i][j]);
			   
			   else 
			   	printf("%f \n", C[i][j]);
			   
		   }
	   }
} void transp(){
    int i, j,linha,coluna;
    	printf(" ___________________________________");
	printf("\n|                                   |");
	printf("\n|     MATRIZ TRANSPOSTA             |");
    printf("\n|___________________________________|");
    printf("\n");
    printf("Digite a quantidade de linhas da Matriz  :");
	scanf("%d",&linha);
	printf("Digite a quandade de colunas da Matriz :");
	scanf("%d", &coluna);
	int matriz[linha][coluna];
	int matrizt[linha][coluna];
	for(i=0;i<linha;i++){
			for(j=0;j<coluna;j++){
				printf("Digite os valores da Matriz[%d][%d]= ", i+1,j+1);
				scanf("%d",&matriz[i][j]);
			}
	}       for(i=0;i<linha;i++){
			for(j=0;j<coluna;j++){
				matrizt[j][i]=matriz[i][j];
			}
		}
 	  printf(" ____________________________________");
    printf("\n|                                   |");
	printf("\n|            MATRIZ                 |");
    printf("\n|___________________________________|");
    printf("\n");
    for(i=0;i<linha;i++){
        for(j=0;j<coluna;j++){
            if(j!=(coluna-1))
                printf(" \t %d",matriz[i][j]);
				 else
                printf(" \t %d ",matriz[i][j]);
        }
        printf(" \n \n ");
    } 
    printf("-------------------------------------------\n");
	  printf(" ____________________________________");
    printf("\n|                                   |");
	printf("\n|         MATRIZ  TRANSPOSTA        |");
    printf("\n|___________________________________|");
    printf("\n");
	 for(i=0;i<coluna;i++){
	 printf("");
        for(j=0;j<linha;j++){
	 		if(j!=(linha-1))
                printf(" \t %d ",matrizt[i][j]);
        else
                printf(" \t %d ",matrizt[i][j]);
			 		 }
			 		 printf(" \n \n");
	 }
}
void diagonal(){
	int m[3][3], l, c;
	for(l=0;l<3; l++){
		for(c=0; c<3; c++){
			printf("Digite os valores da Matriz[%d][%d]:", l, c);
			scanf("%d", &m[l][c]);
		}
	}
	 printf("-----------------------------------------------\n");
	printf("DIAGONAL PRINCIPAL= { ");
	for(l=0; l<3; l++){
		printf(" [%d][%d]= %d ", l, l, m[l][l]);
	}
	printf("}");
	printf("\n");
	 printf("-----------------------------------------------\n");
	printf("DIAGONAL SECUNDÁRIA= {");
	c=2;
	for(l=0; l<3; l++){
	   	printf(" [%d][%d]= %d ", l, c, m[l][c]);
	   	c--;
	} 	printf("}");
	printf(" \n");
}
main(){
	setlocale(LC_ALL, "Portuguese");
	int M,M2,M3,M4, A[5], B[5], U[10], i, j, cont=0, R[]={}, aux;
	float LadoQ, AreaQ, perimetroq, base, alt,perimetror,arear, raioc,PC,AC;
    printf("|______________________________________________________|\n");
	printf("|________________________MENU__________________________|\n");
	printf("|--[1]:Geometria---------------------------------------|\n");
	printf("|--[2]:Vetor-------------------------------------------|\n");
	printf("|--[3]:Matriz------------------------------------------|\n");
	printf("|--[0]:Sair do menu------------------------------------|\n");
	printf("|--Digite qual seu metodo: ----------------------------|\n");
	scanf("%d", &M);

	switch(M){
		case 0:
			system("cls");
			printf(" ______________________________________________");
	        printf("\n|                                             |");
	        printf("\n|                                             |");
	        printf("\n|                                             |");
	        printf("\n|                                             |");
	        printf("\n|                                             |");
	        printf("\n|   OBRIGADO POR USAR NOSSO PROGRAMA!!        |");
            printf("\n|                  FIM....                    |");
			printf("\n|                                             |");
			printf("\n|                                             |");
			printf("\n|                                             |");
			printf("\n|                                             |");	
		    printf("\n|                                           |");
		    printf("\n|_____________________________________________|");
		break;
		case 1:
				system("cls");
	    printf("|__________________________________________________|\n");
		printf("|___________Área e Perímetro de figuras____________|\n");
		printf("|--[1]: Quadrado-----------------------------------|\n");
		printf("|--[2]: Retângulo----------------------------------|\n");
		printf("|--[3]: Circulo------------------------------------|\n");
		printf("|--[4]: Voltar ao menu principal ------------------|\n");
		printf("|--Digite a opção desejada:------------------------|\n");
		scanf("%d", &M2);
		    if ( M2 == 1){
		    		system("cls");
		       printf(" _____________________________________");
	           printf("\n|                                   |");
	           printf("\n|             QUADRADO              |");
               printf("\n|___________________________________|");
				printf("\nDigite o lado do quadrado:");
		     	scanf("%f", &LadoQ);  
		     	AreaQ=LadoQ*LadoQ;
		     	perimetroq=LadoQ*4;
		     	printf("o perímetro é %.2f e a área é %.2f\n", perimetroq, AreaQ);
		     	printf("\n");
			main();
			    }
			else if (M2 == 2){
					system("cls");
					 printf(" ____________________________________");
	                printf("\n|                                   |");
	                printf("\n|            RETÂNGULO              |");
                    printf("\n|___________________________________|");
				printf("\nDigite a base do retângulo:");
				scanf("%f", &base);       
				printf("digite a altura do retângulo:");
				scanf("%f", &alt);
				perimetror=(base*2)+(alt*2);
				arear=base*alt;
				printf("A área do retângulo é %.2f e o perímetro é %.2f\n", arear, perimetror);
				printf("\n");
			main();
		    } 
			else if(M2 == 3) {
					system("cls");
					printf(" _____________________________________");
                    printf("\n|                                   |");
                 	printf("\n|               CIRCULO             |");
                    printf("\n|___________________________________|");
		        printf("\nDigite o raio do circulo: ");
				scanf("%f", &raioc);
			    PC=(2*PI*raioc);
				AC=PI*raioc*raioc;
				printf("A area do circulo é %.2f e o perimetro é %.2f\n", AC, PC);
				printf("\n");
			main();
		     	}
		     	else if(M2==4){
		     		main();
				 }
		     	else {
		     		printf("Nenhuma opção válida!!");
		     		printf("\n");
			main();
				 }
		     	break;
		case 2:
			system("cls");
		printf("|__________________________________________________|\n");	
		printf("|_____________Operações com  Vetores________________|\n");
		printf("|--[1]: União---------------------------------------|\n");
		printf("|--[2]: Intersecção---------------------------------|\n");
		printf("|--[3]: Diferença-----------------------------------|\n");
		printf("|--[4]: Voltar ao menu principal -------------------|\n");
		printf("|--Digite a opção desejada:-------------------------|\n");
		scanf("%d", &M3);
		
		if ( M3 == 1){
				system("cls");
			printf(" ___________________________________");
	        printf("\n|                                   |");
	        printf("\n|                UNIÃO              |");
            printf("\n|___________________________________|");
            printf("\n");
		for(i=0;i<5;i++){
		printf("Entre com um elemento do Conjunto A[%d]: ", i);
		scanf("%d",&A[i]);
		U[i]=A[i];
	} aux=0;
		for(i=0; i<5; i++){
	     for(j=0; j<5; j++){
		if (A[i] < A[j]){
	     		aux=A[i];
	     		A[i]=A[j];
	     		A[j]=aux;
	     	}
	}
}
	    printf(" Conjunto A ordenado= {");
	    for(i=0; i<5; i++){
	    	printf(" %d ", A[i]);
		}
	    printf("}");
	    printf("\n");
	printf("-------------------------------------------\n");
	for(i=0;i<5;i++) {
		printf("Entre com um elemento do Conjunto B[%d]: ", i);
		scanf("%d",&B[i]);
		U[i+5]=B[i];
	} aux=0;
		for(i=0; i<5; i++){
	     for(j=0; j<5; j++){
		if (B[i] < B[j]){
	     		aux=B[i];
	     		B[i]=B[j];
	     		B[j]=aux; 
	     }
	 }
}  printf(" Conjunto B ordenado= {");
	    for(i=0; i<5; i++){
	    	printf(" %d ", B[i]);
		}
	    printf("}");
	    printf("\n");
	for(i=0;i<10;i++){
	    for(j=1+i; j<10; j++){
    if (U[i] == U[j]){
            U[j]=0;
    }
	    }
	}
     for(i=0; i<10; i++){
         if(U[i] != 0){
             R[cont]=U[i];
             cont++;
         }
     } 
	 printf("Os elementos da da União são {");
	for(i=0;i<cont;i++){
			printf(" %d ", R[i]);
		}
			printf("}");
			printf("\n");
			main();
  	}
    	else if(M3 == 2){
    		system("cls");
    		intersec();
    		printf("\n");
			main();
    		
		}
		else if(M3== 3){
			system("cls");
			dife();
			printf("\n");
			main();
			
		}
		else if(M3==4){
			system("cls");
			main();
			printf("\n");
			main();
		}
		else {
			printf("Opção inválida");
		}
		    break;
		    
		case 3:
				system("cls");
		printf("|___________________________________________________|\n");
		printf("|_________________Operações com Matrizes____________|\n");
		printf("|--[1]: Soma----------------------------------------|\n");
		printf("|--[2]: Subtração-----------------------------------|\n");
		printf("|--[3]: Multiplicação-------------------------------|\n");
		printf("|--[4]: Matriz Transposta-------------------------- |\n");
		printf("|--[5]: Diagonal Principal e Secundária------------ |\n");
	    printf("|--[6]: Voltar ao menu principal -------------------|\n");
		printf("|--Digite a opção desejada: ------------------------|\n");
		scanf("%d", &M4);
		if (M4== 1){
				system("cls");
			SomaMa();
			printf("\n");
			main();
		}
		else if(M4==2){
				system("cls");
			SubMa();
				printf("\n");
			main();
		}
		else if(M4==3){
				system("cls");
			multi();
				printf("\n");
			main();
		}
		else if (M4==4){
				system("cls");
			transp();
				printf("\n");
			main();
		}
		else if(M4 == 5){
				system("cls");
				printf("\n");
				diagonal();
				 main();
		} else if (M4 == 6){
			system("cls");
			main();
				printf("\n");
		        main();
		}
		else{
			printf("Opção inválida");
		}
		    break;
		    default:
		    printf("Nenhuma opção selecionada");
		    
	}
		}

	
